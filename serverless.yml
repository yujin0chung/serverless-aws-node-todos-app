service: serverless-app

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:us-west-1:641240258309:table/todos"

functions:
  getTodo:
    handler: handlers/get.run
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true
      - cloudwatchLog:
          logGroup: "/aws/lambda/getTodo"
  createTodo:
    handler: handlers/create.run
    events:
      - http:
          path: todos
          method: post
          cors: true
      - cloudwatchLog:
          logGroup: "/aws/lambda/createTodo"
  updateTodoStatus:
    handler: handlers/update.run
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true
      - cloudwatchLog:
          logGroup: "/aws/lambda/updateTodo"
  deleteTodo:
    handler: handlers/delete.run
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true
      - cloudwatchLog:
          logGroup: "/aws/lambda/deleteTodo"
  list:
    handler: handlers/list.run
    events:
      - http:
          path: todos
          method: get
          cors: true
      - cloudwatchLog:
          logGroup: "/aws/lambda/list"

resources:
  Resources:
    TodosTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: todos
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
